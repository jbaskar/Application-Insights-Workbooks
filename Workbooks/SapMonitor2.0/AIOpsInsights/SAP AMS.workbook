{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "873995df-dc8d-416c-b620-44ce8c083850",
            "version": "KqlParameterItem/1.0",
            "name": "amsResource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.workloads/monitors": true,
                "microsoft.hanaonazure/sapmonitors": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          },
          {
            "id": "632fc734-2fdb-43ad-b298-02a2bd04a3a2",
            "version": "KqlParameterItem/1.0",
            "name": "workspace",
            "type": 5,
            "isRequired": true,
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/subscriptions/{amsResource:subscriptionid}/resourceGroups/{amsResource:resourcegroup}/providers/Microsoft.Workloads/monitors/{amsResource:name}\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2021-12-01-preview\"}],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.properties\",\"columns\":[{\"path\":\"$.logAnalyticsWorkspaceArmId\",\"columnid\":\"id\",\"columnType\":\"string\"}]}}]}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 12
          }
        ],
        "style": "above",
        "queryType": 12
      },
      "conditionalVisibility": {
        "parameterName": "hidden",
        "comparison": "isEqualTo",
        "value": "no"
      },
      "name": "all_providers"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{workspace}"
              ],
              "parameters": [
                {
                  "id": "8db7d224-b80f-4cd8-8d5a-0d8413228340",
                  "version": "KqlParameterItem/1.0",
                  "name": "tableExists",
                  "type": 1,
                  "query": "let checktable = (tb:string)\r\n{\r\n// 0 = no error\r\n// 1 = table does not exist (need to enable RFC)\r\n// 2 = table exists, but column v1 does not (or) column v1 exists but no data in the table (need to wait)\r\nlet c1 = \"SID_s\";\r\nlet dummy = \"unmÃ¶glicher-wert!\";\r\nlet MissingTable = view () { print miss = 1, columnV1 = dummy, records = -1 };\r\nlet checkRecords =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | summarize records = count()\r\n    )\r\n  | project records\r\n  | top 1 by records desc\r\n;\r\nlet checkTableExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | count\r\n      | extend miss = 0\r\n    )\r\n  | project miss\r\n  | limit 2\r\n  | top 1 by miss asc\r\n;\r\nlet checkColumnExists =\r\n  union\r\n    isfuzzy=true MissingTable,\r\n    (table(tb)\r\n      | extend miss = 0\r\n      | extend columnV1 = column_ifexists(c1, dummy)\r\n    )\r\n  | project miss, columnV1\r\n  | limit 2\r\n  | top 1 by miss asc\r\n ;\r\nlet tableExists = toscalar(checkTableExists | summarize max(miss) != 1);\r\nlet columnV1Exists = toscalar(checkColumnExists | summarize max(columnV1) != dummy);\r\nlet tableRecords = toscalar(checkRecords | summarize max(records));\r\nlet x = iif(tableExists, iif(columnV1Exists, iif(tableRecords > 0, \"0\", \"2\"), \"2\"), \"1\");\r\ntoscalar(x)\r\n};\r\nlet system = checktable('SapNetweaver_GetSystemInstanceList_CL');\r\nlet process = checktable('SapNetweaver_GetProcessList_CL');\r\nlet vms = checktable('COMMON_VM_ArmId_Mapping_CL');\r\nlet hana = checktable('SapHana_SystemAvailability_CL');\r\n\r\nprint strcat(\r\n'{\"SapNetweaver_GetSystemInstanceList_CL\":',system, ',',\r\n'\"SapNetweaver_GetProcessList_CL\":',process, ',',\r\n'\"SapHana_SystemAvailability_CL\":',hana, ',',\r\n'\"COMMON_VM_ArmId_Mapping_CL\":',vms, '}')",
                  "crossComponentResources": [
                    "{workspace}"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "28366602-f715-4e87-9e70-8e7279439b38",
                  "version": "KqlParameterItem/1.0",
                  "name": "vmIdsExist",
                  "type": 2,
                  "query": "print input = parse_json('{tableExists}')\r\n| mv-apply input to typeof(dynamic) on (\r\n    project error=tostring(input[\"COMMON_VM_ArmId_Mapping_CL\"])\r\n    | where isnotempty(error)\r\n    | project error = tolong(error)\r\n)\r\n| project value=iff(error==2 or error==0, true, false)",
                  "crossComponentResources": [
                    "{workspace}"
                  ],
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ]
                  },
                  "defaultValue": "value::1",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "e4814ca9-6cff-421a-83e7-5553794ecd7e",
                  "version": "KqlParameterItem/1.0",
                  "name": "nwExists",
                  "type": 2,
                  "query": "print input = parse_json('{tableExists}')\r\n| mv-apply input to typeof(dynamic) on (\r\nproject error=tostring(input[\"SapNetweaver_GetProcessList_CL\"])\r\n    | where isnotempty(error)\r\n    | project error = tolong(error)\r\n)\r\n| project value=iff(error==0, true, false)",
                  "crossComponentResources": [
                    "{workspace}"
                  ],
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ]
                  },
                  "defaultValue": "value::1",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "hanaExists",
                  "type": 2,
                  "query": "print input = parse_json('{tableExists}')\r\n| mv-apply input to typeof(dynamic) on (\r\nproject error=tostring(input[\"SapHana_SystemAvailability_CL\"])\r\n    | where isnotempty(error)\r\n    | project error = tolong(error)\r\n)\r\n| project value=iff(error==2 or error==0, true, false)",
                  "crossComponentResources": [
                    "{workspace}"
                  ],
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::1",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "09142554-8d2f-41f6-880c-682aa7aaa233"
                },
                {
                  "id": "8b9f3a88-484e-40d2-889c-597a76a22b08",
                  "version": "KqlParameterItem/1.0",
                  "name": "showData",
                  "type": 2,
                  "isGlobal": true,
                  "query": "print \"{vmIdsExist}\"==\"true\" and (\"{nwExists}\"==\"true\" or \"{hanaExists}\"==\"true\")",
                  "crossComponentResources": [
                    "{workspace}"
                  ],
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::1",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "checkParams"
          },
          {
            "type": 1,
            "content": {
              "json": "Please add an SAP NetWeaver and HANA provider to view this workbook.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "nwExists",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "nwExists",
                "comparison": "isEqualTo",
                "value": "false"
              },
              {
                "parameterName": "hanaExists",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "hanaExists",
                "comparison": "isEqualTo",
                "value": "false"
              }
            ],
            "name": "netweaverMissing"
          },
          {
            "type": 1,
            "content": {
              "json": "There was an error fetching the virtual machines linked to SAP NetWeaver provider. Please reach out to support for further assistance.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "vmIdsExist",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "vmIdsExist",
                "comparison": "isEqualTo",
                "value": "false"
              }
            ],
            "name": "vmIdsMissing"
          }
        ],
        "exportParameters": true
      },
      "name": "validationCheck"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{workspace}"
        ],
        "parameters": [
          {
            "id": "54eab0e3-55e7-4fae-9558-aecfd4df5e3a",
            "version": "KqlParameterItem/1.0",
            "name": "timePeriod",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 3600000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "bd7954e7-ce9c-47ee-94a6-652fb161f635",
            "version": "KqlParameterItem/1.0",
            "name": "selSID",
            "label": "SID",
            "type": 2,
            "isRequired": true,
            "query": "union isfuzzy=true \r\n(SapNetweaver_GetSystemInstanceList_CL\r\n| distinct SID_s),\r\n(SapHana_SystemOverview_CL \r\n| extend SID_s = tostring(VALUE_s)\r\n| where NAME_s == \"Instance ID\"\r\n| distinct SID_s)\r\n| distinct SID_s",
            "crossComponentResources": [
              "{workspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timePeriod",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "8c48e286-b612-4ea3-9979-aa4f3d3f75cf",
            "version": "KqlParameterItem/1.0",
            "name": "providerInstance",
            "label": "SAP Provider",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"/{amsResource}/providerInstances/\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2021-12-01-preview\"}],\"batchDisabled\":true,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[]}}]}",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 12
          },
          {
            "id": "c1bfdd3c-98e2-405e-8cd8-7f568fcef9cc",
            "version": "KqlParameterItem/1.0",
            "name": "selTab",
            "label": "",
            "type": 1,
            "isHiddenWhenLocked": true
          },
          {
            "id": "6023e0c7-9b1d-4e77-8f37-19c316c30084",
            "version": "KqlParameterItem/1.0",
            "name": "hidden",
            "type": 1,
            "value": "yes",
            "isHiddenWhenLocked": true
          },
          {
            "id": "a2e1bef8-8275-4283-8335-334020b48280",
            "version": "KqlParameterItem/1.0",
            "name": "sidTitle",
            "type": 1,
            "query": "print iff(\"{providerInstance:label}\" == \"All\", \"{selSID}\", \"{selSID}@{providerInstance:label}\")",
            "crossComponentResources": [
              "{workspace}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "showData",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "showData",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "name": "parameters"
    },
    {
      "type": 1,
      "content": {
        "json": "Select an SID to view insights.",
        "style": "warning"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selSID",
          "comparison": "isEqualTo"
        },
        {
          "parameterName": "showData",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "showData",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "name": "starterBanner"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{amsResource}"
        ],
        "parameters": [
          {
            "id": "4f064bf8-9dff-419f-b20a-15d36ba50479",
            "version": "KqlParameterItem/1.0",
            "name": "subscription",
            "type": 6,
            "isRequired": true,
            "query": "Resources\r\n| summarize by subscriptionId\r\n| project value = subscriptionId, label = subscriptionId, selected = subscriptionId == '{amsResource:subscription}'",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "8b9a4b92-95cc-4fb4-91fe-7a55143397f9",
            "version": "KqlParameterItem/1.0",
            "name": "selTab",
            "type": 11,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\"Availability\",\"Performance\"]",
            "value": "Availability"
          }
        ],
        "style": "pills",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "showData",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "showData",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "name": "alertParams"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### {selTab} Alerts for {sidTitle}"
            },
            "name": "alertsTitle"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{subscription}"
              ],
              "parameters": [
                {
                  "id": "edbc4b3c-e503-4169-95b4-8b75e695a428",
                  "version": "KqlParameterItem/1.0",
                  "name": "performanceAlertTemplates",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\"sapnetweaver-processing-anomaly\", \"sapnetweaver-dynamic-thresholding\", \"sapnetweaver-response-time\", \"sapnetweaver-batch-job-jobname\", \"sapnetweaver-cpu-user-utilization\",\"sapnetweaver-cpu-system-utilization\",\"sapnetweaver-memory-utilization\",\"sapnetweaver-instance-queue-wait\",\"sapnetweaver-instance-work-process-utilization\"]",
                  "defaultValue": "value::all"
                },
                {
                  "id": "5c48bbd9-9b60-4e0a-bd41-181d38566b43",
                  "version": "KqlParameterItem/1.0",
                  "name": "availabilityAlertTemplates",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "",
                  "delimiter": ",",
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\"sapnetweaver-system-availability\", \"sapnetweaver-instance-availability\", \"sapnetweaver-enqueue-server\",\"sapnetweaver-enqueue-replicator-server\",\"saphana-availability-reponse\",\"saphana-availability-reponse-services\"]",
                  "defaultValue": "value::all"
                },
                {
                  "id": "2da6ac7d-f135-4bce-b91a-41e09ea891ea",
                  "version": "KqlParameterItem/1.0",
                  "name": "alertsOptsData",
                  "type": 1,
                  "query": "AlertsManagementResources\r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| extend StartTime = todatetime(properties.essentials.startDateTime)\r\n| where StartTime between (todatetime(\"{timePeriod:startISO}\") .. todatetime(\"{timePeriod:endISO}\"))\r\n| extend State=tostring(properties.essentials.alertState)\r\n| extend AlertRule=tolower(tostring(properties.essentials.alertRule))\r\n| extend Severity=tostring(properties.essentials.severity)\r\n| extend MonitorCondition=tostring(properties.essentials.monitorCondition)\r\n| join kind=inner (Resources \r\n    | where type =~ 'microsoft.insights/scheduledQueryRules'\r\n    | extend workspace = tostring(properties.scopes[0])\r\n\t| extend pInstance=tags.['profile-id'], templateId=tags.['alert-template-id']\r\n    | where workspace =~ '{workspace}' and ((\"{selTab}\"==\"Availability\" and \"{availabilityAlertTemplates}\" contains templateId) or (\"{selTab}\"!=\"Availability\" and \"{performanceAlertTemplates}\" contains templateId))\r\n    | where (\"{providerInstance}\") contains pInstance \r\n    | project AlertRule=tolower(id), Description=properties.description, pInstance) on AlertRule\r\n| distinct Severity, State\r\n| extend json=pack_all()\r\n| summarize Result = tostring(make_list(json))",
                  "crossComponentResources": [
                    "{workspace}"
                  ],
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "ef926b47-be34-4b23-972c-cd995fb7ee32",
                  "version": "KqlParameterItem/1.0",
                  "name": "param_firedTime",
                  "type": 1,
                  "isHiddenWhenLocked": true
                },
                {
                  "id": "a2f8d375-6d45-41fc-9e1c-e3bbdfeffbde",
                  "version": "KqlParameterItem/1.0",
                  "name": "alertSeverity",
                  "label": "Severity",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "print input = parse_json('{alertsOptsData}')\r\n| mv-apply input to typeof(dynamic) on (\r\n    project Severity=tostring(input.Severity)\r\n)\r\n| distinct Severity",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "timeContextFromParameter": "timePeriod",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.workloads/monitors"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "alertState",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "print input = parse_json('{alertsOptsData}')\r\n| mv-apply input to typeof(dynamic) on (\r\n    project State=tostring(input.State)\r\n)\r\n| distinct State",
                  "crossComponentResources": [
                    "{workspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "timePeriod",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "label": "State",
                  "id": "7642d72d-e0ca-456a-967b-3530f4891a2d"
                },
                {
                  "id": "3b011548-d88e-4840-af4e-22c7a74109d2",
                  "version": "KqlParameterItem/1.0",
                  "name": "filteredAlertsData",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "\"",
                  "delimiter": ",",
                  "query": "AlertsManagementResources\r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| extend StartTime = todatetime(properties.essentials.startDateTime)\r\n| where StartTime between (todatetime(\"{timePeriod:startISO}\") .. todatetime(\"{timePeriod:endISO}\"))\r\n| extend State=tostring(properties.essentials.alertState)\r\n| extend AlertRule=tolower(tostring(properties.essentials.alertRule))\r\n| extend Severity=tostring(properties.essentials.severity)\r\n| extend MonitorCondition=tostring(properties.essentials.monitorCondition)\r\n| where \"{alertSeverity}\" contains Severity and \"{alertState}\" contains State\r\n| join kind=inner (Resources \r\n    | where type =~ 'microsoft.insights/scheduledQueryRules'\r\n    | extend workspace = tostring(properties.scopes[0])\r\n\t| extend pInstance=tags.['profile-id'], templateId=tags.['alert-template-id']\r\n    | where workspace =~ '{workspace}' and ((\"{selTab}\"==\"Availability\" and \"{availabilityAlertTemplates}\" contains templateId) or (\"{selTab}\"!=\"Availability\" and \"{performanceAlertTemplates}\" contains templateId)) and (\"{providerInstance}\") contains pInstance \r\n    | project AlertRule=tolower(id), Description=properties.description, pInstance) on AlertRule\r\n| order by StartTime asc\r\n| summarize AlertsFired=count() by bin(StartTime, (toreal(datetime_diff(\"minute\", {timePeriod:end}, {timePeriod:start})) / 100) * 1m)\r\n| project json=strcat(AlertsFired,\"::\",StartTime)",
                  "crossComponentResources": [
                    "{subscription}"
                  ],
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                }
              ],
              "style": "above",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "alertFilters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "print input = parse_json(strcat('[','{filteredAlertsData}',']'))\r\n| mv-apply input to typeof(string) on (\r\n    extend data=split(input, \"::\")\r\n    | project AlertsFired=tolong(data[0]),StartTime=todatetime(data[1])\r\n)",
              "size": 1,
              "aggregation": 3,
              "title": "💡 Select a time range to see relevant insights",
              "noDataMessage": "No alerts found in this time range or no alert rules have been configured for this monitoring profile.",
              "timeBrushParameterName": "timePeriod",
              "timeBrushExportOnlyWhenBrushed": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{workspace}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "StartTime",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 1,
                    "formatOptions": {
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "parameter",
                        "templateId": "sapInsightsWB",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "workbook",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "timePeriod",
                            "source": "column",
                            "value": "StartTime"
                          }
                        ]
                      },
                      "bladeOpenContext": {
                        "bladeName": "AlertDetailsTemplateBlade",
                        "extensionName": "Microsoft_Azure_Monitoring",
                        "bladeParameters": [
                          {
                            "name": "alertId",
                            "source": "column",
                            "value": "id"
                          }
                        ]
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Click on this to filter insights specific to this alert."
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 11
                  },
                  {
                    "columnMatch": "MonitorCondition",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Resolved",
                          "representation": "Resolved",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Fired",
                          "representation": "Fired",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertInfo",
                    "formatter": 1,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkIsContextBlade": true,
                      "bladeOpenContext": {
                        "bladeName": "AlertDetailsTemplateBlade",
                        "extensionName": "Microsoft_Azure_Monitoring",
                        "bladeParameters": [
                          {
                            "name": "alertId",
                            "source": "column",
                            "value": "id"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Description",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "AlertRule",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "pInstance",
                    "formatter": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "StartTime",
                    "label": "Fired Time"
                  }
                ]
              },
              "sortBy": [],
              "chartSettings": {
                "xAxis": "StartTime",
                "yAxis": [
                  "AlertsFired"
                ],
                "group": null,
                "createOtherGroup": 0,
                "seriesLabelSettings": [
                  {
                    "seriesName": "AlertsFired",
                    "label": "Alerts Fired"
                  }
                ]
              }
            },
            "customWidth": "100",
            "conditionalVisibilities": [
              {
                "parameterName": "alertsOptsData",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "alertsOptsData",
                "comparison": "isNotEqualTo",
                "value": "[]"
              },
              {
                "parameterName": "hidden",
                "comparison": "isEqualTo",
                "value": "no"
              }
            ],
            "showPin": false,
            "name": "firedAlertsNew"
          },
          {
            "type": 1,
            "content": {
              "json": "No alerts found in this time range or no alert rules have been configured for this monitoring profile.",
              "style": "info"
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "alertsOptsData",
              "comparison": "isEqualTo",
              "value": "[]"
            },
            "name": "noAlertsInfo"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AlertsManagementResources\r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| extend StartTime = todatetime(properties.essentials.startDateTime)\r\n| where StartTime between (todatetime(\"{timePeriod:startISO}\") .. todatetime(\"{timePeriod:endISO}\"))\r\n| extend State=tostring(properties.essentials.alertState)\r\n| extend AlertRule=tolower(tostring(properties.essentials.alertRule))\r\n| extend Severity=tostring(properties.essentials.severity)\r\n| extend MonitorCondition=tostring(properties.essentials.monitorCondition)\r\n| where \"{alertSeverity}\" contains Severity and \"{alertState}\" contains State\r\n| join kind=inner (Resources \r\n    | where type =~ 'microsoft.insights/scheduledQueryRules'\r\n    | extend workspace = tostring(properties.scopes[0])\r\n\t| extend pInstance=tags.['profile-id'], templateId=tags.['alert-template-id']\r\n    | where workspace =~ '{workspace}' and ((\"{selTab}\"==\"Availability\" and \"{availabilityAlertTemplates}\" contains templateId) or (\"{selTab}\"!=\"Availability\" and \"{performanceAlertTemplates}\" contains templateId)) and (\"{providerInstance}\") contains pInstance \r\n    | project AlertRule=tolower(id), Description=properties.description, pInstance) on AlertRule\r\n| order by Severity asc, State, StartTime\r\n| project StartTime, Name=name, Severity, State, id, AlertInfo=\"View Alert\"",
              "size": 0,
              "title": "💡 Click on the alert row to see insights",
              "noDataMessage": "No alerts found in this time range or no alert rules have been configured for this monitoring profile.",
              "exportedParameters": [
                {
                  "fieldName": "StartTime",
                  "parameterName": "param_firedTime",
                  "defaultValue": ""
                },
                {
                  "fieldName": "StartTime",
                  "parameterName": "paramFiredDateTime",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "StartTime",
                    "formatter": 6,
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 1,
                    "formatOptions": {
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "workbook",
                        "templateIdSource": "parameter",
                        "templateId": "sapInsightsWB",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "workbook",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "timePeriod",
                            "source": "column",
                            "value": "StartTime"
                          }
                        ]
                      },
                      "bladeOpenContext": {
                        "bladeName": "AlertDetailsTemplateBlade",
                        "extensionName": "Microsoft_Azure_Monitoring",
                        "bladeParameters": [
                          {
                            "name": "alertId",
                            "source": "column",
                            "value": "id"
                          }
                        ]
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Click on this to filter insights specific to this alert."
                    }
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 11
                  },
                  {
                    "columnMatch": "MonitorCondition",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Resolved",
                          "representation": "Resolved",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Fired",
                          "representation": "Fired",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertInfo",
                    "formatter": 1,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkIsContextBlade": true,
                      "bladeOpenContext": {
                        "bladeName": "AlertDetailsTemplateBlade",
                        "extensionName": "Microsoft_Azure_Monitoring",
                        "bladeParameters": [
                          {
                            "name": "alertId",
                            "source": "column",
                            "value": "id"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "Description",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "AlertRule",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "pInstance",
                    "formatter": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "StartTime",
                    "label": "Fired Time"
                  },
                  {
                    "columnId": "AlertInfo",
                    "label": "Details"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "100",
            "conditionalVisibilities": [
              {
                "parameterName": "alertsOptsData",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "alertsOptsData",
                "comparison": "isNotEqualTo",
                "value": "[]"
              }
            ],
            "showPin": false,
            "name": "firedAlerts"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "selSID",
        "comparison": "isNotEqualTo"
      },
      "customWidth": "0",
      "name": "alertsPane",
      "styleSettings": {
        "maxWidth": "45%"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{workspace}"
        ],
        "parameters": [
          {
            "id": "e2b6dde7-64ea-41ec-82f6-2c2d36633b2a",
            "version": "KqlParameterItem/1.0",
            "name": "startTime",
            "type": 1,
            "query": "print iff(isempty(\"{param_firedTime}\") or \"{param_firedTime}\" == \"none\", todatetime(\"{timePeriod:startISO}\"), datetime_add(\"minute\", -30, todatetime(\"{param_firedTime}\")));\r\nlet endTime = iff(isempty(\"{param_firedTime}\") or \"{param_firedTime}\" == \"none\", todatetime(\"{timePeriod:endISO}\"), datetime_add(\"minute\", 30, todatetime(\"{param_firedTime}\")))",
            "crossComponentResources": [
              "{workspace}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "78c360ea-113c-4004-9971-936215fc4335",
            "version": "KqlParameterItem/1.0",
            "name": "endTime",
            "type": 1,
            "query": "print iff(isempty(\"{param_firedTime}\") or \"{param_firedTime}\" == \"none\", todatetime(\"{timePeriod:endISO}\"), datetime_add(\"minute\", 30, todatetime(\"{param_firedTime}\")))",
            "crossComponentResources": [
              "{workspace}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "3afabf11-ec88-4a57-806c-ec715446a046",
            "version": "KqlParameterItem/1.0",
            "name": "minutesBin",
            "type": 1,
            "query": "let dateDiff = tolong(datetime_diff('minute', todatetime(\"{endTime}\"), todatetime(\"{startTime}\")));\r\nlet numParts = iff(dateDiff <= 4000, iff(dateDiff<10, iff(dateDiff==0, 1, dateDiff), dateDiff/5), tolong(4000));\r\nprint iff(dateDiff <= 4000, iff(dateDiff<10, dateDiff, 5), dateDiff/4000)",
            "crossComponentResources": [
              "{workspace}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "5936cbc3-4c18-49aa-a8df-5ee069b0fb59",
            "version": "KqlParameterItem/1.0",
            "name": "showPlot",
            "type": 1,
            "query": "print iff(isnotempty(\"{minutesBin}\") and {minutesBin} > 0, true, false)",
            "crossComponentResources": [
              "{workspace}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "b4e66584-69ad-4429-8731-6967fa16b278",
            "version": "KqlParameterItem/1.0",
            "name": "displayRange",
            "type": 1,
            "query": "print strcat(\"{startTime}\", \" - \", \"{endTime}\")",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.workloads/monitors"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "param_SID",
        "comparison": "isNotEqualTo"
      },
      "name": "visibilityCheck"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "### SAP System and VM Health Insights for {sidTitle}<br/><br/><br/><br/>"
            },
            "name": "availabilityInsightsTitle"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "💡Selecting an alert filters these insights to a 1-hour window around the selected alert",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = todatetime(\"{startTime}\");\r\nlet endTime = todatetime(\"{endTime}\");\r\n\r\nlet binSize=tolong(\"{minutesBin}\")*1m;\r\nlet hundredBin=datetime_diff(\"minute\", endTime, startTime);\r\n\r\nlet ParentAvailTable=SapNetweaver_GetProcessList_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s==\"{selSID}\" and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| project description_s, SID_s, hostname_s, dispstatus_s, serverTimestamp_t;\r\n\r\nParentAvailTable\r\n| make-series AvailabilityTrend=iff(count() > 0, round(toreal(countif(dispstatus_s == 'SAPControl-GREEN')) / toreal(count()) * 100, 1), real(null)) default=real(null) on serverTimestamp_t step binSize  by SID_s, hostname_s, description_s\r\n| project Availability=toreal(series_stats_dynamic(series_fill_const(AvailabilityTrend, 0.0)).avg), SID_s, hostname_s, description_s \r\n| join kind=inner (\r\n    ParentAvailTable\r\n        | make-series AvailabilityTrend=iff(count() > 0, round(toreal(countif(dispstatus_s == 'SAPControl-GREEN')) / toreal(count()) * 100, 1), real(null)) default=real(null) on serverTimestamp_t step iff(hundredBin<100, 1m, hundredBin/100*1m) by SID_s, hostname_s, description_s\r\n        | project AvailabilityTrend=series_fill_const(AvailabilityTrend, 0.0), SID_s, hostname_s, description_s\r\n) on hostname_s, description_s, SID_s\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where (isempty(sid_s) or sid_s==\"{selSID}\") and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n    | distinct VM_ARM_ID_s, vm_name_s) on $left.hostname_s==$right.vm_name_s\r\n| project description_s, SID_s, VM_ARM_ID_s, Availability, AvailabilityTrend\r\n| extend Insights=\"View\", SAPComponent='SAP NetWeaver'\r\n| extend display_s=strcat(description_s, \" @ \", SAPComponent)",
                    "size": 3,
                    "title": "SAP NetWeaver",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "description_s",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SID_s",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "VM_ARM_ID_s",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": false,
                            "showIcon": true,
                            "customColumnWidthSetting": "5%"
                          }
                        },
                        {
                          "columnMatch": "Availability",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "<",
                                "thresholdValue": "50",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "100",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "5%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": true,
                              "maximumFractionDigits": 2
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Click on this to expand availability trend and RCA."
                          }
                        },
                        {
                          "columnMatch": "AvailabilityTrend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green"
                          }
                        },
                        {
                          "columnMatch": "Insights",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/AIOpsInsights/Availability Insights",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "workbook",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "Process",
                                  "source": "column",
                                  "value": "description_s"
                                },
                                {
                                  "name": "VMID",
                                  "source": "column",
                                  "value": "VM_ARM_ID_s"
                                },
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "Tab",
                                  "source": "static",
                                  "value": "VM"
                                },
                                {
                                  "name": "Provider",
                                  "source": "parameter",
                                  "value": "providerInstance"
                                },
                                {
                                  "name": "TimePeriod",
                                  "source": "parameter",
                                  "value": "displayRange"
                                },
                                {
                                  "name": "SAPComponent",
                                  "source": "column",
                                  "value": "SAPComponent"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "timePeriod"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "SAPComponent",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "display_s",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "hostname_s",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "description_s"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "description_s",
                          "label": "Process"
                        },
                        {
                          "columnId": "VM_ARM_ID_s",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "Availability",
                          "label": "Process Availability"
                        },
                        {
                          "columnId": "AvailabilityTrend",
                          "label": "Availability Trend"
                        },
                        {
                          "columnId": "Insights",
                          "label": "VM and Process Insights"
                        },
                        {
                          "columnId": "SAPComponent",
                          "label": "Component"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "nwExists",
                    "comparison": "isEqualTo",
                    "value": "true"
                  },
                  "showPin": false,
                  "name": "netweaverAvailability"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = todatetime(\"{startTime}\");\r\nlet endTime = todatetime(\"{endTime}\");\r\n\r\nlet bin = tolong(\"{minutesBin}\");\r\nlet binSize=iff(bin < 60, 60m, bin*1m);\r\nlet hundredBin=datetime_diff(\"hour\", endTime, startTime);\r\n\r\nlet ParentAvailTable=SapHana_SystemOverview_CL \r\n| extend sid = tostring(VALUE_s)\r\n| extend provider = tostring(PROVIDER_INSTANCE_s)\r\n| where \"{providerInstance}\" contains provider\r\n| where NAME_s == \"Instance ID\" and sid == \"{selSID}\"\r\n| distinct SID_s = sid, PROVIDER_INSTANCE_s=provider\r\n| join kind=inner (SapHana_SystemAvailability_CL\r\n    | where Time_Generated_t between (startTime .. endTime)\r\n    ) on PROVIDER_INSTANCE_s\r\n| project-away DATABASE_NAME_s\r\n| join kind=inner (SapHana_size01_CL \r\n    | where SYSTEM_ID_s == \"{selSID}\"\r\n    | distinct PROVIDER_INSTANCE_s, DATABASE_NAME_s\r\n    ) on PROVIDER_INSTANCE_s\r\n| project DATABASE_NAME_s, PORT_d, SERVICE_NAME_s, SERVICE_ACTIVE_s, HOST_s, HOST_ACTIVE_s, Time_Generated_t, SID_s;\r\n\r\nunion(ParentAvailTable\r\n| make-series AvailabilityTrend=iff(count() > 0, round(toreal(countif(HOST_ACTIVE_s == 'YES')) / toreal(count()) * 100, 1), real(null)) default=real(null) on Time_Generated_t step binSize  by HOST_s, DATABASE_NAME_s\r\n| project Availability=round(toreal(series_stats_dynamic(series_fill_const(AvailabilityTrend, 0.0)).avg), 1), HOST_s, DATABASE_NAME_s \r\n| join kind=inner (\r\n    ParentAvailTable\r\n        | make-series AvailabilityTrend=iff(count() > 0, round(toreal(countif(HOST_ACTIVE_s == 'YES')) / toreal(count()) * 100, 1), real(null)) default=real(null) on Time_Generated_t step iff(hundredBin<100, 1h, hundredBin/100*1h) by HOST_s, DATABASE_NAME_s\r\n        | project AvailabilityTrend=series_fill_const(AvailabilityTrend, 0.0), HOST_s, DATABASE_NAME_s\r\n) on HOST_s, DATABASE_NAME_s\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where (isempty(sid_s) or sid_s==\"{selSID}\") and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n    | distinct VM_ARM_ID_s, vm_name_s) on $left.HOST_s==$right.vm_name_s\r\n| project description_s=DATABASE_NAME_s, VM_ARM_ID_s, Availability, AvailabilityTrend\r\n| extend Insights=\"View\", SAPComponent='SAP Hana', SID_s = \"{selSID}\"\r\n| extend display_s=description_s, parentid=\"\", id=description_s, Service=\"\"),\r\n(ParentAvailTable\r\n| where isnotempty(SERVICE_NAME_s)\r\n| extend Service=strcat(SERVICE_NAME_s, \" (:\", toint(PORT_d), \")\")\r\n| make-series AvailabilityTrend=iff(count() > 0, round(toreal(countif(SERVICE_ACTIVE_s == 'YES')) / toreal(count()) * 100, 1), real(null)) default=real(null) on Time_Generated_t step binSize  by HOST_s, DATABASE_NAME_s, Service\r\n| project Availability=round(toreal(series_stats_dynamic(series_fill_const(AvailabilityTrend, 0.0)).avg), 1), HOST_s, DATABASE_NAME_s, Service \r\n| join kind=inner (\r\n    ParentAvailTable\r\n        | where isnotempty(SERVICE_NAME_s)\r\n        | extend Service=strcat(SERVICE_NAME_s, \" (:\", toint(PORT_d), \")\")\r\n        | make-series AvailabilityTrend=iff(count() > 0, round(toreal(countif(SERVICE_ACTIVE_s == 'YES')) / toreal(count()) * 100, 1), real(null)) default=real(null) on Time_Generated_t step iff(hundredBin<100, 1h, hundredBin/100*1h) by HOST_s, DATABASE_NAME_s, Service\r\n        | project AvailabilityTrend=series_fill_const(AvailabilityTrend, 0.0), HOST_s, DATABASE_NAME_s, Service\r\n) on HOST_s, DATABASE_NAME_s, Service\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where (isempty(sid_s) or sid_s==\"{selSID}\") and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n    | distinct VM_ARM_ID_s, vm_name_s) on $left.HOST_s==$right.vm_name_s\r\n| project description_s=DATABASE_NAME_s, Service, VM_ARM_ID_s, Availability, AvailabilityTrend\r\n| extend Insights=\"View\", SAPComponent='SAP Hana', SID_s = \"{selSID}\"\r\n| extend display_s=Service\r\n| extend parentid=description_s\r\n| extend id=strcat(parentid,\"_\",Service))\r\n| project id, parentid, description_s, Service, VM_ARM_ID_s, Availability, AvailabilityTrend, Insights, SAPComponent, SID_s, display_s",
                    "size": 3,
                    "title": "SAP HANA",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "id",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "parentid",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "description_s",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Service",
                          "formatter": 5,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "VM_ARM_ID_s",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": false,
                            "showIcon": true,
                            "customColumnWidthSetting": "3%"
                          }
                        },
                        {
                          "columnMatch": "Availability",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "<",
                                "thresholdValue": "50",
                                "representation": "4",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "100",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "3%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": true,
                              "maximumFractionDigits": 2
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Click on this to expand availability trend and RCA."
                          }
                        },
                        {
                          "columnMatch": "AvailabilityTrend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "green"
                          }
                        },
                        {
                          "columnMatch": "Insights",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "linkIsContextBlade": true,
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/SapMonitor2.0/AIOpsInsights/Availability Insights",
                              "typeSource": "workbook",
                              "gallerySource": "workbook",
                              "locationSource": "workbook",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "Process",
                                  "source": "column",
                                  "value": "description_s"
                                },
                                {
                                  "name": "VMID",
                                  "source": "column",
                                  "value": "VM_ARM_ID_s"
                                },
                                {
                                  "name": "SID",
                                  "source": "column",
                                  "value": "SID_s"
                                },
                                {
                                  "name": "Tab",
                                  "source": "static",
                                  "value": "VM"
                                },
                                {
                                  "name": "Provider",
                                  "source": "parameter",
                                  "value": "providerInstance"
                                },
                                {
                                  "name": "TimePeriod",
                                  "source": "parameter",
                                  "value": "displayRange"
                                },
                                {
                                  "name": "SAPComponent",
                                  "source": "column",
                                  "value": "SAPComponent"
                                },
                                {
                                  "name": "Service",
                                  "source": "column",
                                  "value": "Service"
                                },
                                {
                                  "name": "TimeRange",
                                  "source": "parameter",
                                  "value": "timePeriod"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "SAPComponent",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SID_s",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "display_s",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "hostname_s",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "idColumn": "id",
                        "parentColumn": "parentid",
                        "treeType": 0,
                        "expanderColumn": "display_s",
                        "expandTopLevel": false
                      },
                      "labelSettings": [
                        {
                          "columnId": "VM_ARM_ID_s",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "Availability",
                          "label": "Availability"
                        },
                        {
                          "columnId": "AvailabilityTrend",
                          "label": "Availability Trend"
                        },
                        {
                          "columnId": "SAPComponent",
                          "label": "Component"
                        },
                        {
                          "columnId": "display_s",
                          "label": "Database / Service"
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "hanaExists",
                    "comparison": "isEqualTo",
                    "value": "true"
                  },
                  "showPin": false,
                  "name": "hanaAvailability"
                }
              ]
            },
            "customWidth": "100",
            "name": "insightsGrids"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selTab",
          "comparison": "isEqualTo",
          "value": "Availability"
        },
        {
          "parameterName": "selSID",
          "comparison": "isNotEqualTo"
        }
      ],
      "customWidth": "55",
      "name": "availability"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "6437ca9b-71f1-46a0-a7f3-702f84abdca3",
            "version": "KqlParameterItem/1.0",
            "name": "anomalyDetection",
            "label": "View Mode",
            "type": 10,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\"Basic\",\"Advanced\"]",
            "timeContext": {
              "durationMs": 86400000
            },
            "value": "Basic"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.workloads/monitors"
      },
      "conditionalVisibility": {
        "parameterName": "selTab",
        "comparison": "isEqualTo",
        "value": "Performance"
      },
      "name": "perfToggle"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "💡Selecting an alert filters these insights to a 1-hour window around the selected alert",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "### Contextual Insights for {selSID}"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "db5125db-9c4b-4ebd-ac46-2406d5c7588e",
                        "version": "KqlParameterItem/1.0",
                        "name": "issueType",
                        "label": "Issue Type",
                        "type": 2,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[\"High Response Time\", \"Long Batch Jobs\"]",
                        "value": "High Response Time"
                      },
                      {
                        "id": "521b8a72-31d7-424b-acf1-2e2b276dcce8",
                        "version": "KqlParameterItem/1.0",
                        "name": "sapTask",
                        "label": "Task",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "query": "let endTime=todatetime(\"{endTime}\");\r\nlet startTime=todatetime(\"{startTime}\");\r\n\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime)\r\n| mv-apply element=split(\"{selSID}\",\",\") to typeof(string) on \r\n(\r\n   top 1 by element\r\n)\r\n| where element==SID_s and \"{providerInstance}\" contains PROVIDER_INSTANCE_s and (\"{issueType}\"!=\"Long Batch Jobs\" or Task_Type_Name_s==\"BCKGRD\")\r\n| distinct Task_Type_Name_s",
                        "crossComponentResources": [
                          "{workspace}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "above",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "80",
                  "name": "contextFilters"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let endTime=todatetime(\"{endTime}\");\r\nlet startTime=todatetime(\"{startTime}\");\r\nlet binSize=tolong(\"{minutesBin}\");\r\n\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{selSID}\" and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| mv-apply task=split(\"{sapTask}\",\",\") to typeof(string) on \r\n(\r\n   project task\r\n)\r\n| where task==Task_Type_Name_s\r\n| summarize ResponseTime = avg(Total_Response_Time_d / Total_Steps_d),\r\n    DBTime = avg(Total_DB_Time_d / Total_Steps_d),\r\n    RollWaitTime = avg(Total_Roll_Wait_Time_d / Total_Steps_d),\r\n    WaitTime = avg(Total_Queue_Time_d / Total_Steps_d),\r\n    ProcessingTime = avg(Total_Processing_Time_d / Total_Steps_d),\r\n    GUITime = avg(Total_GUI_Time_d / Total_Steps_d),\r\n    CPUTime = avg(Total_CPU_Time_d / Total_Steps_d) by bin(TimeGenerated, iff(binSize<60, 1m, binSize*1m))\r\n| sort by ResponseTime desc",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Top Time Taking Requests (ST03)",
                    "timeBrushParameterName": "brushedTimePeriod",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{workspace}"
                    ],
                    "visualization": "timechart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SID_s",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ResponseTime",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "greenRed",
                            "linkTarget": "GenericDetails",
                            "linkIsContextBlade": true
                          },
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to see more information on the response time."
                          }
                        },
                        {
                          "columnMatch": "DBTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "RollWaitTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "WaitTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "ProcessingTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "GUITime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "CPUTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "DB_time",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Processing_time",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "GUI_Time",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Wait_time",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Task",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SID_s",
                          "label": "SAP System"
                        },
                        {
                          "columnId": "ResponseTime",
                          "label": "Response Time"
                        }
                      ]
                    },
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "yAxis": [
                        "ResponseTime"
                      ],
                      "seriesLabelSettings": [
                        {
                          "seriesName": "ResponseTime",
                          "label": "Response Time"
                        }
                      ],
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "contextualPlotParentNew"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let endTime=todatetime(\"{brushedTimePeriod:endISO}\");\r\nlet startTime=todatetime(\"{brushedTimePeriod:startISO}\");\r\nlet timeDiff=datetime_diff(\"minute\", endTime, startTime);\r\nlet binSize=tolong(\"{minutesBin}\");\r\nlet finalBinSize=iff(timeDiff >= binSize, binSize, timeDiff);\r\n\r\nSapNetweaver_SWNC_CL \r\n| where TimeGenerated between (startTime .. endTime) and SID_s==\"{selSID}\" and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| mv-apply task=split(\"{sapTask}\",\",\") to typeof(string) on \r\n(\r\n   project task\r\n)\r\n| where task==Task_Type_Name_s\r\n| summarize ResponseTime = avg(Total_Response_Time_d / Total_Steps_d),\r\n    DBTime = avg(Total_DB_Time_d / Total_Steps_d),\r\n    RollWaitTime = avg(Total_Roll_Wait_Time_d / Total_Steps_d),\r\n    WaitTime = avg(Total_Queue_Time_d / Total_Steps_d),\r\n    ProcessingTime = avg(Total_Processing_Time_d / Total_Steps_d),\r\n    GUITime = avg(Total_GUI_Time_d / Total_Steps_d),\r\n    CPUTime = avg(Total_CPU_Time_d / Total_Steps_d) by SID_s, bin(TimeGenerated, iff(binSize<60, 1m, finalBinSize*1m))\r\n| sort by ResponseTime desc",
                    "size": 0,
                    "title": "💡Click on the response time to view its constituents",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SID_s",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ResponseTime",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "greenRed",
                            "linkTarget": "GenericDetails",
                            "linkIsContextBlade": true
                          },
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Click to see more information on the response time."
                          }
                        },
                        {
                          "columnMatch": "DBTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "RollWaitTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "WaitTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "ProcessingTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "GUITime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "CPUTime",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 23,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "DB_time",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Processing_time",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "GUI_Time",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Wait_time",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Task",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SID_s",
                          "label": "SAP System"
                        },
                        {
                          "columnId": "ResponseTime",
                          "label": "Response Time"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "brushedTimePeriod",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "contextualPlotParent"
                }
              ],
              "exportParameters": true
            },
            "name": "perfResponse"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "#### Application metrics for {selSID}"
                  },
                  "name": "text - 5 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime=todatetime(\"{brushedTimePeriod:startISO}\");\r\nlet endTime=todatetime(\"{brushedTimePeriod:endISO}\");\r\nlet dateDiff = tolong(datetime_diff('minute', endTime, startTime));\r\nlet numParts = iff(dateDiff <= 4000, iff(dateDiff<10, iff(dateDiff==0, 1, dateDiff), dateDiff/5), tolong(4000));\r\nlet binSize = iff(dateDiff <= 4000, iff(dateDiff<10, dateDiff, 5), dateDiff/4000);\r\n\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{selSID}\"\r\n| mv-apply task=split(\"{sapTask}\",\",\") to typeof(string) on \r\n(\r\n   project task\r\n)\r\n| where task==Task_Type_Name_s\r\n| extend DatabaseCalls =  ST03_Avg_DB_Dir_Time_d + ST03_Avg_DB_Seq_Time_d + ST03_Avg_DB_Change_Time_d  \r\n| summarize DatabaseCalls=avg(DatabaseCalls) by bin(serverTimestamp_t, binSize * 1m), Task_Type_Name_s ",
                    "size": 1,
                    "aggregation": 3,
                    "title": "Database Calls",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{workspace}"
                    ],
                    "visualization": "timechart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "DatabaseCalls"
                      ],
                      "group": "Task_Type_Name_s",
                      "createOtherGroup": null,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "issueType",
                    "comparison": "isEqualTo",
                    "value": "High Response Time"
                  },
                  "name": "databaseCalls"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime=todatetime(\"{brushedTimePeriod:startISO}\");\r\nlet endTime=todatetime(\"{brushedTimePeriod:endISO}\");\r\nlet dateDiff = tolong(datetime_diff('minute', endTime, startTime));\r\nlet numParts = iff(dateDiff <= 4000, iff(dateDiff<10, iff(dateDiff==0, 1, dateDiff), dateDiff/5), tolong(4000));\r\nlet binSize = iff(dateDiff <= 4000, iff(dateDiff<10, dateDiff, 5), dateDiff/4000);\r\n\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{selSID}\"\r\n| mv-apply task=split(\"{sapTask}\",\",\") to typeof(string) on \r\n(\r\n   project task\r\n)\r\n| where task==Task_Type_Name_s\r\n| project serverTimestamp_t, Task_Type_Name_s, Total_DB_Time_d, Total_Steps_d\r\n| summarize Total_DB_Time_d=avg(Total_DB_Time_d/Total_Steps_d) by bin(serverTimestamp_t, binSize * 1m), Task_Type_Name_s",
                    "size": 1,
                    "aggregation": 3,
                    "title": "Avg. Time per DB Call",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{workspace}"
                    ],
                    "visualization": "timechart",
                    "chartSettings": {
                      "xAxis": "serverTimestamp_t",
                      "yAxis": [
                        "Total_DB_Time_d"
                      ],
                      "group": "Task_Type_Name_s",
                      "createOtherGroup": null,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "issueType",
                    "comparison": "isEqualTo",
                    "value": "High Response Time"
                  },
                  "name": "averageTimePerDB"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Work Process Utilization",
                    "items": [
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "crossComponentResources": [
                            "{workspace}"
                          ],
                          "parameters": [
                            {
                              "id": "84815031-6c33-49ee-9c1e-d0d840e70c17",
                              "version": "KqlParameterItem/1.0",
                              "name": "wpType",
                              "label": "Work Process Type",
                              "type": 2,
                              "multiSelect": true,
                              "quote": "",
                              "delimiter": ",",
                              "query": "let startTime=todatetime(\"{brushedTimePeriod:startISO}\");\r\nlet endTime=todatetime(\"{brushedTimePeriod:endISO}\");\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{selSID}\"\r\n| distinct Typ_s",
                              "crossComponentResources": [
                                "{workspace}"
                              ],
                              "typeSettings": {
                                "additionalResourceOptions": [
                                  "value::all"
                                ],
                                "showDefault": false
                              },
                              "defaultValue": "value::all",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "above",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "wpFilters"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{brushedTimePeriod:startISO}\");\r\nlet endTime=todatetime(\"{brushedTimePeriod:endISO}\");\r\nlet dateDiff = tolong(datetime_diff('minute', endTime, startTime));\r\nlet numParts = iff(dateDiff <= 4000, iff(dateDiff<10, iff(dateDiff==0, 1, dateDiff), dateDiff/5), tolong(4000));\r\nlet binSize = iff(dateDiff <= 4000, iff(dateDiff<10, dateDiff, 5), dateDiff/4000);\r\n\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| where SID_s == \"{selSID}\"\r\n| mv-apply task=split(\"{wpType}\",\",\") to typeof(string) on \r\n(\r\n   project task\r\n)\r\n| where task==Typ_s\r\n| summarize totalWP = count(), freeWP = countif(Status_s == \"Wait\") by bin(serverTimestamp_t, binSize * 1m)\r\n| extend activeWP = totalWP - freeWP",
                          "size": 1,
                          "aggregation": 3,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{workspace}"
                          ],
                          "visualization": "areachart",
                          "chartSettings": {
                            "xAxis": "serverTimestamp_t",
                            "yAxis": [
                              "freeWP",
                              "activeWP"
                            ],
                            "group": null,
                            "createOtherGroup": 0,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "freeWP",
                                "label": "Free Work Processes"
                              },
                              {
                                "seriesName": "activeWP",
                                "label": "Active Work Processes"
                              }
                            ]
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "issueType",
                          "comparison": "isEqualTo",
                          "value": "High Response Time"
                        },
                        "name": "workProcessUtil"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "issueType",
                    "comparison": "isEqualTo",
                    "value": "High Response Time"
                  },
                  "name": "wpUtilGroup"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime=todatetime(\"{brushedTimePeriod:startISO}\");\r\nlet endTime=todatetime(\"{brushedTimePeriod:endISO}\");\r\nlet dateDiff = tolong(datetime_diff('minute', endTime, startTime));\r\nlet numParts = iff(dateDiff <= 4000, iff(dateDiff<10, iff(dateDiff==0, 1, dateDiff), dateDiff/5), tolong(4000));\r\nlet binSize = iff(dateDiff <= 4000, iff(dateDiff<10, dateDiff, 5), dateDiff/4000);\r\n\r\nSapNetweaver_EnqueueRead_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and  SID_s == \"{selSID}\" and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| extend GTCODE = column_ifexists(\"GTCODE_s\", \"\")\r\n| extend GBCKTYPE = column_ifexists(\"GBCKTYPE_s\", \"\")\r\n| summarize GNAME = dcount(GNAME_s) by GNAME_s, GMODE_s, GOBJ_s, GUNAME_s, GTWP_s, hostname_s, serverTimestamp_t\r\n| summarize locks = count() by GOBJ_s, GNAME_s, GUNAME_s, hostname_s",
                    "size": 3,
                    "title": "Lock Entries (SM12)",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{workspace}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "GOBJ_s",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "GNAME_s",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "locks",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "rightContent": {
                        "columnMatch": "GUNAME_s",
                        "formatter": 1
                      },
                      "secondaryContent": {
                        "columnMatch": "hostname_s"
                      },
                      "showBorder": false,
                      "size": "auto"
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "issueType",
                    "comparison": "isEqualTo",
                    "value": "High Response Time"
                  },
                  "name": "lockEntries"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Batch Jobs (SM37)",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{brushedTimePeriod:startISO}\");\r\nlet endTime=todatetime(\"{brushedTimePeriod:endISO}\");\r\nlet dateDiff = tolong(datetime_diff('minute', endTime, startTime));\r\nlet numParts = iff(dateDiff <= 4000, iff(dateDiff<10, iff(dateDiff==0, 1, dateDiff), dateDiff/5), tolong(4000));\r\nlet binSize = iff(dateDiff <= 4000, iff(dateDiff<10, dateDiff, 5), dateDiff/4000);\r\n\r\nlet batches = SapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s == \"{selSID}\" and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')    \r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddatetime, startdatetime, enddatetime, hostname_s;\r\n\r\nunion (\r\n    batches\r\n    | where Status==\"Active\"\r\n    | summarize Value=count() by hostname_s\r\n    | extend Category=\"Active Jobs\"\r\n), \r\n(\r\n    batches\r\n    | summarize Value=countif(datetime_diff(\"minute\", enddatetime, startdatetime) > 30) by hostname_s\r\n    | extend Category=\"Runtime > 30 Minutes\"\r\n), \r\n(\r\n    batches\r\n    | where Status != 'Scheduled' and Status != 'Released' and Status != 'Ready'\r\n    | summarize Value=countif(startdatetime > planneddatetime) by hostname_s\r\n    | extend Category=\"Jobs With Delayed Start\"\r\n)\r\n| order by Category, hostname_s",
                          "size": 3,
                          "exportFieldName": "Category",
                          "exportParameterName": "batchCategory",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{workspace}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Category",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "Value",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "secondaryContent": {
                              "columnMatch": "hostname_s",
                              "formatter": 1
                            },
                            "showBorder": false,
                            "size": "auto"
                          },
                          "graphSettings": {
                            "type": 2,
                            "topContent": {
                              "columnMatch": "JOBNAME_s",
                              "formatter": 1
                            },
                            "centerContent": {
                              "columnMatch": "Value",
                              "formatter": 1,
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "nodeIdField": "Category",
                            "graphOrientation": 3,
                            "showOrientationToggles": false,
                            "nodeSize": null,
                            "staticNodeSize": 100,
                            "colorSettings": null,
                            "hivesMargin": 5
                          },
                          "chartSettings": {
                            "xAxis": "startdatetime",
                            "yAxis": [
                              "Value"
                            ],
                            "group": "Category",
                            "createOtherGroup": null
                          }
                        },
                        "name": "batchJobs"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let startTime=todatetime(\"{brushedTimePeriod:startISO}\");\r\nlet endTime=todatetime(\"{brushedTimePeriod:endISO}\");\r\nlet dateDiff = tolong(datetime_diff('minute', endTime, startTime));\r\nlet numParts = iff(dateDiff <= 4000, iff(dateDiff<10, iff(dateDiff==0, 1, dateDiff), dateDiff/5), tolong(4000));\r\nlet binSize = iff(dateDiff <= 4000, iff(dateDiff<10, dateDiff, 5), dateDiff/4000);\r\n\r\nSapNetweaver_BatchJobs_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and SID_s == \"{selSID}\" and \"{providerInstance}\" contains PROVIDER_INSTANCE_s\r\n| extend planneddatetime =  todatetime(strcat(SDLSTRTDT_s, SDLSTRTTM_s))\r\n| extend startdatetime =  todatetime(strcat(STRTDATE_s, STRTTIME_s))\r\n| extend enddatetime =  todatetime(strcat(ENDDATE_s, ENDTIME_s))\r\n| extend Status = case( STATUS_s == 'F', 'Finished',\r\n                        STATUS_s == 'S', 'Released',\r\n                        STATUS_s == 'P', 'Scheduled',\r\n                        STATUS_s == 'A', 'Cancelled',\r\n                        STATUS_s == 'Z', 'Active',\r\n                        STATUS_s == 'Y', 'Ready', '')    \r\n| where (\"{batchCategory}\" =~ \"Jobs with Delayed Start\" and Status != 'Scheduled' and Status != 'Released' and Status != 'Ready' and startdatetime > planneddatetime) or (\"{batchCategory}\" =~ \"Active Jobs\" and Status == \"Active\") or (\"{batchCategory}\" =~ \"Runtime > 30 minutes\" and datetime_diff(\"minute\", enddatetime, startdatetime) > 30)\r\n| distinct Status, JOBNAME_s, JOBCLASS_s, PERIODIC_s, planneddatetime, startdatetime, enddatetime, hostname_s, LASTCHNAME_s\r\n| order by planneddatetime desc",
                          "size": 0,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "crossComponentResources": [
                            "{workspace}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Cancelled",
                                      "representation": "cancelled",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "hostname_s",
                                "formatter": 5
                              }
                            ],
                            "labelSettings": [
                              {
                                "columnId": "JOBNAME_s",
                                "label": "Job Name"
                              },
                              {
                                "columnId": "JOBCLASS_s",
                                "label": "Job Class"
                              },
                              {
                                "columnId": "PERIODIC_s",
                                "label": "Periodic"
                              },
                              {
                                "columnId": "planneddatetime",
                                "label": "Planned Date & Time"
                              },
                              {
                                "columnId": "startdatetime",
                                "label": "Start Date & Time"
                              },
                              {
                                "columnId": "enddatetime",
                                "label": "End Date & Time"
                              },
                              {
                                "columnId": "hostname_s",
                                "label": "VM Name"
                              },
                              {
                                "columnId": "LASTCHNAME_s",
                                "label": "User Name"
                              }
                            ]
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "batchCategory",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "batchJobGrid"
                      }
                    ]
                  },
                  "customWidth": "100",
                  "conditionalVisibility": {
                    "parameterName": "issueType",
                    "comparison": "isEqualTo",
                    "value": "High Response Time"
                  },
                  "name": "runningBatchJobs"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "brushedTimePeriod",
              "comparison": "isNotEqualTo"
            },
            "name": "sapSystemMetrics"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "f5e85ee4-f49d-469c-bf1d-8e20a8b80a05",
                        "version": "KqlParameterItem/1.0",
                        "name": "perfVMs",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "let endTime = todatetime(\"{endTime}\");\r\nlet startTime = todatetime(\"{startTime}\");\r\n\r\nSapNetweaver_SWNC_CL\r\n| where serverTimestamp_t between (startTime .. endTime) and \"{providerInstance}\" contains PROVIDER_INSTANCE_s and SID_s==\"{selSID}\"\r\n| distinct PROVIDER_INSTANCE_s = tolower(PROVIDER_INSTANCE_s), SID_s\r\n| join kind=inner (\r\n    COMMON_VM_ArmId_Mapping_CL\r\n    | where isempty(sid_s) or sid_s==\"{selSID}\"\r\n    | distinct VM_ARM_ID_s, vm_name_s, PROVIDER_INSTANCE_s = tolower(PROVIDER_INSTANCE_s), SID_s = iff(isempty(sid_s), \"{selSID}\", sid_s)) on PROVIDER_INSTANCE_s\r\n| distinct id=VM_ARM_ID_s, label=vm_name_s\r\n",
                        "crossComponentResources": [
                          "{workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "perfParams"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "#### VM metrics for {selSID}"
                  },
                  "name": "text - 5"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbooka84b6240-1be5-49c0-9114-5deae6272a52",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.compute/virtualmachines",
                    "metricScope": 0,
                    "resourceParameter": "perfVMs",
                    "resourceIds": [
                      "{perfVMs}"
                    ],
                    "timeContextFromParameter": "brushedTimePeriod",
                    "timeContext": {
                      "durationMs": 2592000000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.compute/virtualmachines",
                        "metric": "microsoft.compute/virtualmachines--Percentage CPU",
                        "aggregation": 4,
                        "splitBy": null,
                        "columnName": "CPU %"
                      }
                    ],
                    "title": "CPU Percentage",
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "33.3",
                  "name": "cpuPercent"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookc095c82e-eb25-4c44-912c-beb2b32fd4ce",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.compute/virtualmachines",
                    "metricScope": 0,
                    "resourceParameter": "perfVMs",
                    "resourceIds": [
                      "{perfVMs}"
                    ],
                    "timeContextFromParameter": "brushedTimePeriod",
                    "timeContext": {
                      "durationMs": 2592000000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.compute/virtualmachines",
                        "metric": "microsoft.compute/virtualmachines--Data Disk IOPS Consumed Percentage",
                        "aggregation": 4,
                        "splitBy": null
                      }
                    ],
                    "title": "Data Disk IOPS Consumed Percentage",
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "33.3",
                  "name": "diskIOPS"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbooke82baeba-4cfe-48d0-9809-d0906fabf0d8",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.compute/virtualmachines",
                    "metricScope": 0,
                    "resourceParameter": "perfVMs",
                    "resourceIds": [
                      "{perfVMs}"
                    ],
                    "timeContextFromParameter": "brushedTimePeriod",
                    "timeContext": {
                      "durationMs": 2592000000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.compute/virtualmachines",
                        "metric": "microsoft.compute/virtualmachines--Network In Total",
                        "aggregation": 4,
                        "splitBy": null
                      },
                      {
                        "namespace": "microsoft.compute/virtualmachines",
                        "metric": "microsoft.compute/virtualmachines--Network Out Total",
                        "aggregation": 4
                      }
                    ],
                    "title": "Network In/Out Total",
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "33.3",
                  "conditionalVisibility": {
                    "parameterName": "issueType",
                    "comparison": "isEqualTo",
                    "value": "High Response Time"
                  },
                  "name": "networkInOut"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbookc095c82e-eb25-4c44-912c-beb2b32fd4ce",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.compute/virtualmachines",
                    "metricScope": 0,
                    "resourceParameter": "perfVMs",
                    "resourceIds": [
                      "{perfVMs}"
                    ],
                    "timeContextFromParameter": "brushedTimePeriod",
                    "timeContext": {
                      "durationMs": 2592000000
                    },
                    "metrics": [
                      {
                        "namespace": "microsoft.compute/virtualmachines",
                        "metric": "microsoft.compute/virtualmachines--Available Memory Bytes",
                        "aggregation": 4,
                        "splitBy": null
                      }
                    ],
                    "title": "Available Memory",
                    "gridSettings": {
                      "rowLimit": 10000
                    }
                  },
                  "customWidth": "33.3",
                  "conditionalVisibility": {
                    "parameterName": "issueType",
                    "comparison": "isEqualTo",
                    "value": "Long Batch Jobs"
                  },
                  "name": "availableMemory"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "### Configuration Drifts for {selSID}"
                  },
                  "name": "configDriftTitle"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| where type == 'microsoft.advisor/recommendations'and properties['recommendationTypeId'] in (\"fad6ef33-8ee0-4b11-b6b9-27c927a6d06d\", \"a742dd2f-a022-45a2-8948-6741b460c461\", \"7f921999-e9e3-4193-8b77-10382beb4dc9\", \"b081afb7-0106-4b69-8bc6-9f9ea1e57728\")\r\n| project SID=tostring(split(properties['resourceMetadata']['resourceId'],'/',8)[0]), VM=split(tostring(properties['extendedProperties']['VMsAffected']),\",\"), recommendationTypeId=tostring(properties['recommendationTypeId']), solution=tostring(properties['shortDescription']['solution'])\r\n| where SID==\"{selSID}\"\r\n| mv-expand VM to typeof(string)\r\n| where isnotempty(VM) and \"{perfVMs}\" contains VM\r\n| distinct VM, solution",
                    "size": 1,
                    "noDataMessage": "No configuration drifts logged in the given time period.",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SID",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "VM",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "recommendationTypeId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "solution",
                          "formatter": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "VM",
                          "label": "VM Name"
                        },
                        {
                          "columnId": "solution",
                          "label": "Recommended Action"
                        }
                      ]
                    }
                  },
                  "customWidth": "70",
                  "name": "configDrifts"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "brushedTimePeriod",
              "comparison": "isNotEqualTo"
            },
            "name": "perfmetrics"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selTab",
          "comparison": "isEqualTo",
          "value": "Performance"
        },
        {
          "parameterName": "anomalyDetection",
          "comparison": "isEqualTo",
          "value": "Basic"
        }
      ],
      "name": "performance"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}